{"ast":null,"code":"var _jsxFileName = \"/Users/harry/Dropbox/Tool_Development/Auto_Creation_Report/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from '../utils/toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:8765';\n\n// Add token to requests if available\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle 401 responses\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check for existing token and user data\n    const savedToken = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (savedToken && savedUser) {\n      setToken(savedToken);\n      setUser(JSON.parse(savedUser));\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n\n      // Save token\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n\n      // Get user data\n      const userResponse = await axios.get('/users/me', {\n        headers: {\n          Authorization: `Bearer ${access_token}`\n        }\n      });\n      const userData = userResponse.data;\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      toast.success('ログインに成功しました');\n      navigate('/');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'ログインに失敗しました';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n\n      // Save token\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n\n      // Get user data\n      const userResponse = await axios.get('/users/me', {\n        headers: {\n          Authorization: `Bearer ${access_token}`\n        }\n      });\n      const userData = userResponse.data;\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      toast.success('登録に成功しました');\n      navigate('/');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || '登録に失敗しました';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n    toast.info('ログアウトしました');\n    navigate('/login');\n  };\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!token && !!user,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PVPSKTfWwyp4DehxzvF5isKx4uM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","axios","toast","jsxDEV","_jsxDEV","AuthContext","undefined","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","setToken","isLoading","setIsLoading","navigate","savedToken","savedUser","JSON","parse","login","email","password","post","access_token","data","setItem","userResponse","get","userData","stringify","success","_error$response2","_error$response2$data","errorMessage","detail","register","name","_error$response3","_error$response3$data","logout","info","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harry/Dropbox/Tool_Development/Auto_Creation_Report/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from '../utils/toast';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:8765';\n\n// Add token to requests if available\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle 401 responses\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nconst AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check for existing token and user data\n    const savedToken = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n\n    if (savedToken && savedUser) {\n      setToken(savedToken);\n      setUser(JSON.parse(savedUser));\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password,\n      });\n\n      const { access_token } = response.data;\n      \n      // Save token\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n\n      // Get user data\n      const userResponse = await axios.get('/users/me', {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      });\n\n      const userData = userResponse.data;\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n\n      toast.success('ログインに成功しました');\n      navigate('/');\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.detail || 'ログインに失敗しました';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  const register = async (name: string, email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/register', {\n        name,\n        email,\n        password,\n      });\n\n      const { access_token } = response.data;\n      \n      // Save token\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n\n      // Get user data\n      const userResponse = await axios.get('/users/me', {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      });\n\n      const userData = userResponse.data;\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n\n      toast.success('登録に成功しました');\n      navigate('/');\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.detail || '登録に失敗しました';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n    toast.info('ログアウトしました');\n    navigate('/login');\n  };\n\n  const value: AuthContextType = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!token && !!user,\n    isLoading,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqBvC,MAAMC,WAAW,gBAAGT,aAAa,CAA8BU,SAAS,CAAC;;AAEzE;AACAL,KAAK,CAACM,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACAP,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,KAAK,CAACQ,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC5BU,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGjC,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACyB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAClE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACe,KAAK,EAAEwB,QAAQ,CAAC,GAAGvC,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM0C,QAAQ,GAAGxC,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAM0C,UAAU,GAAG3B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAM2B,SAAS,GAAG5B,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE9C,IAAI0B,UAAU,IAAIC,SAAS,EAAE;MAC3BL,QAAQ,CAACI,UAAU,CAAC;MACpBL,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,CAAC;IAChC;IACAH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMpB,KAAK,CAAC+C,IAAI,CAAC,aAAa,EAAE;QAC/CF,KAAK;QACLC;MACF,CAAC,CAAC;MAEF,MAAM;QAAEE;MAAa,CAAC,GAAG5B,QAAQ,CAAC6B,IAAI;;MAEtC;MACApC,YAAY,CAACqC,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3CZ,QAAQ,CAACY,YAAY,CAAC;;MAEtB;MACA,MAAMG,YAAY,GAAG,MAAMnD,KAAK,CAACoD,GAAG,CAAC,WAAW,EAAE;QAChDrC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUgC,YAAY;QACvC;MACF,CAAC,CAAC;MAEF,MAAMK,QAAQ,GAAGF,YAAY,CAACF,IAAI;MAClCpC,YAAY,CAACqC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACY,SAAS,CAACD,QAAQ,CAAC,CAAC;MACtDlB,OAAO,CAACkB,QAAQ,CAAC;MAEjBpD,KAAK,CAACsD,OAAO,CAAC,aAAa,CAAC;MAC5BhB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOtB,KAAU,EAAE;MAAA,IAAAuC,gBAAA,EAAAC,qBAAA;MACnB,MAAMC,YAAY,GAAG,EAAAF,gBAAA,GAAAvC,KAAK,CAACG,QAAQ,cAAAoC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBE,MAAM,KAAI,aAAa;MAClE1D,KAAK,CAACgB,KAAK,CAACyC,YAAY,CAAC;MACzB,MAAMzC,KAAK;IACb;EACF,CAAC;EAED,MAAM2C,QAAQ,GAAG,MAAAA,CAAOC,IAAY,EAAEhB,KAAa,EAAEC,QAAgB,KAAK;IACxE,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMpB,KAAK,CAAC+C,IAAI,CAAC,gBAAgB,EAAE;QAClDc,IAAI;QACJhB,KAAK;QACLC;MACF,CAAC,CAAC;MAEF,MAAM;QAAEE;MAAa,CAAC,GAAG5B,QAAQ,CAAC6B,IAAI;;MAEtC;MACApC,YAAY,CAACqC,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3CZ,QAAQ,CAACY,YAAY,CAAC;;MAEtB;MACA,MAAMG,YAAY,GAAG,MAAMnD,KAAK,CAACoD,GAAG,CAAC,WAAW,EAAE;QAChDrC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUgC,YAAY;QACvC;MACF,CAAC,CAAC;MAEF,MAAMK,QAAQ,GAAGF,YAAY,CAACF,IAAI;MAClCpC,YAAY,CAACqC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACY,SAAS,CAACD,QAAQ,CAAC,CAAC;MACtDlB,OAAO,CAACkB,QAAQ,CAAC;MAEjBpD,KAAK,CAACsD,OAAO,CAAC,WAAW,CAAC;MAC1BhB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOtB,KAAU,EAAE;MAAA,IAAA6C,gBAAA,EAAAC,qBAAA;MACnB,MAAML,YAAY,GAAG,EAAAI,gBAAA,GAAA7C,KAAK,CAACG,QAAQ,cAAA0C,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBJ,MAAM,KAAI,WAAW;MAChE1D,KAAK,CAACgB,KAAK,CAACyC,YAAY,CAAC;MACzB,MAAMzC,KAAK;IACb;EACF,CAAC;EAED,MAAM+C,MAAM,GAAGA,CAAA,KAAM;IACnBnD,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/Ba,QAAQ,CAAC,IAAI,CAAC;IACdD,OAAO,CAAC,IAAI,CAAC;IACblC,KAAK,CAACgE,IAAI,CAAC,WAAW,CAAC;IACvB1B,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAM2B,KAAsB,GAAG;IAC7BhC,IAAI;IACJtB,KAAK;IACLgC,KAAK;IACLgB,QAAQ;IACRI,MAAM;IACNG,eAAe,EAAE,CAAC,CAACvD,KAAK,IAAI,CAAC,CAACsB,IAAI;IAClCG;EACF,CAAC;EAED,oBAAOlC,OAAA,CAACC,WAAW,CAACgE,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAlC,QAAA,EAAEA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACvC,GAAA,CAzGIF,YAAyC;EAAA,QAI5BhC,WAAW;AAAA;AAAA0E,EAAA,GAJxB1C,YAAyC;AA2G/C,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}