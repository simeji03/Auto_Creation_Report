{"ast":null,"code":"// シンプルなトースト通知の実装\n\nclass ToastManager {\n  constructor() {\n    this.container = null;\n  }\n  getContainer() {\n    if (!this.container) {\n      this.container = document.createElement('div');\n      this.container.className = 'fixed top-4 right-4 z-50 space-y-2';\n      document.body.appendChild(this.container);\n    }\n    return this.container;\n  }\n  show({\n    message,\n    type = 'info',\n    duration = 3000\n  }) {\n    const container = this.getContainer();\n    const toast = document.createElement('div');\n    const bgColor = {\n      success: 'bg-green-500',\n      error: 'bg-red-500',\n      info: 'bg-blue-500'\n    }[type];\n    toast.className = `${bgColor} text-white px-6 py-3 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full`;\n    toast.textContent = message;\n    container.appendChild(toast);\n\n    // Trigger animation\n    setTimeout(() => {\n      toast.classList.remove('translate-x-full');\n    }, 10);\n\n    // Remove after duration\n    setTimeout(() => {\n      toast.classList.add('translate-x-full');\n      setTimeout(() => {\n        container.removeChild(toast);\n      }, 300);\n    }, duration);\n  }\n}\nconst toastManager = new ToastManager();\nexport const toast = {\n  success: message => toastManager.show({\n    message,\n    type: 'success'\n  }),\n  error: message => toastManager.show({\n    message,\n    type: 'error'\n  }),\n  info: message => toastManager.show({\n    message,\n    type: 'info'\n  })\n};","map":{"version":3,"names":["ToastManager","constructor","container","getContainer","document","createElement","className","body","appendChild","show","message","type","duration","toast","bgColor","success","error","info","textContent","setTimeout","classList","remove","add","removeChild","toastManager"],"sources":["/Users/harry/Dropbox/Tool_Development/Auto_Creation_Report/frontend/src/utils/toast.ts"],"sourcesContent":["// シンプルなトースト通知の実装\ntype ToastType = 'success' | 'error' | 'info';\n\ninterface ToastOptions {\n  message: string;\n  type?: ToastType;\n  duration?: number;\n}\n\nclass ToastManager {\n  private container: HTMLDivElement | null = null;\n\n  private getContainer() {\n    if (!this.container) {\n      this.container = document.createElement('div');\n      this.container.className = 'fixed top-4 right-4 z-50 space-y-2';\n      document.body.appendChild(this.container);\n    }\n    return this.container;\n  }\n\n  show({ message, type = 'info', duration = 3000 }: ToastOptions) {\n    const container = this.getContainer();\n    const toast = document.createElement('div');\n    \n    const bgColor = {\n      success: 'bg-green-500',\n      error: 'bg-red-500',\n      info: 'bg-blue-500'\n    }[type];\n\n    toast.className = `${bgColor} text-white px-6 py-3 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full`;\n    toast.textContent = message;\n    \n    container.appendChild(toast);\n    \n    // Trigger animation\n    setTimeout(() => {\n      toast.classList.remove('translate-x-full');\n    }, 10);\n    \n    // Remove after duration\n    setTimeout(() => {\n      toast.classList.add('translate-x-full');\n      setTimeout(() => {\n        container.removeChild(toast);\n      }, 300);\n    }, duration);\n  }\n}\n\nconst toastManager = new ToastManager();\n\nexport const toast = {\n  success: (message: string) => toastManager.show({ message, type: 'success' }),\n  error: (message: string) => toastManager.show({ message, type: 'error' }),\n  info: (message: string) => toastManager.show({ message, type: 'info' })\n};"],"mappings":"AAAA;;AASA,MAAMA,YAAY,CAAC;EAAAC,YAAA;IAAA,KACTC,SAAS,GAA0B,IAAI;EAAA;EAEvCC,YAAYA,CAAA,EAAG;IACrB,IAAI,CAAC,IAAI,CAACD,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,GAAGE,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC9C,IAAI,CAACH,SAAS,CAACI,SAAS,GAAG,oCAAoC;MAC/DF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC,IAAI,CAACN,SAAS,CAAC;IAC3C;IACA,OAAO,IAAI,CAACA,SAAS;EACvB;EAEAO,IAAIA,CAAC;IAAEC,OAAO;IAAEC,IAAI,GAAG,MAAM;IAAEC,QAAQ,GAAG;EAAmB,CAAC,EAAE;IAC9D,MAAMV,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;IACrC,MAAMU,KAAK,GAAGT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAE3C,MAAMS,OAAO,GAAG;MACdC,OAAO,EAAE,cAAc;MACvBC,KAAK,EAAE,YAAY;MACnBC,IAAI,EAAE;IACR,CAAC,CAACN,IAAI,CAAC;IAEPE,KAAK,CAACP,SAAS,GAAG,GAAGQ,OAAO,mGAAmG;IAC/HD,KAAK,CAACK,WAAW,GAAGR,OAAO;IAE3BR,SAAS,CAACM,WAAW,CAACK,KAAK,CAAC;;IAE5B;IACAM,UAAU,CAAC,MAAM;MACfN,KAAK,CAACO,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC;IAC5C,CAAC,EAAE,EAAE,CAAC;;IAEN;IACAF,UAAU,CAAC,MAAM;MACfN,KAAK,CAACO,SAAS,CAACE,GAAG,CAAC,kBAAkB,CAAC;MACvCH,UAAU,CAAC,MAAM;QACfjB,SAAS,CAACqB,WAAW,CAACV,KAAK,CAAC;MAC9B,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,EAAED,QAAQ,CAAC;EACd;AACF;AAEA,MAAMY,YAAY,GAAG,IAAIxB,YAAY,CAAC,CAAC;AAEvC,OAAO,MAAMa,KAAK,GAAG;EACnBE,OAAO,EAAGL,OAAe,IAAKc,YAAY,CAACf,IAAI,CAAC;IAAEC,OAAO;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EAC7EK,KAAK,EAAGN,OAAe,IAAKc,YAAY,CAACf,IAAI,CAAC;IAAEC,OAAO;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC;EACzEM,IAAI,EAAGP,OAAe,IAAKc,YAAY,CAACf,IAAI,CAAC;IAAEC,OAAO;IAAEC,IAAI,EAAE;EAAO,CAAC;AACxE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}