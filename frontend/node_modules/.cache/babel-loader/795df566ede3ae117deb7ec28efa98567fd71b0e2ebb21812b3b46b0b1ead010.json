{"ast":null,"code":"import axios from 'axios';\n\n// APIクライアントのインスタンス\nexport const api = axios.create({\n  baseURL: 'http://localhost:8765/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// リクエストインターセプター（認証トークンの追加）\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// レスポンスインターセプター（エラーハンドリング）\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // 認証エラーの場合はログイン画面へ\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API エンドポイント\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (email, password, name) => api.post('/auth/register', {\n    email,\n    password,\n    name\n  }),\n  me: () => api.get('/auth/me')\n};\nexport const reportsAPI = {\n  list: (page = 1, limit = 10) => api.get('/reports/', {\n    params: {\n      page,\n      limit\n    }\n  }),\n  get: id => api.get(`/reports/${id}`),\n  create: data => api.post('/reports/', data),\n  update: (id, data) => api.put(`/reports/${id}`, data),\n  delete: id => api.delete(`/reports/${id}`),\n  dashboard: () => api.get('/reports/dashboard')\n};\nexport const usersAPI = {\n  me: () => api.get('/users/me'),\n  updateProfile: data => api.put('/users/me', data)\n};\nexport const aiAPI = {\n  generateSuggestions: (type, context) => api.post('/ai/generate-suggestions', {\n    type,\n    context\n  })\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","post","register","name","me","get","reportsAPI","list","page","limit","params","id","data","update","put","delete","dashboard","usersAPI","updateProfile","aiAPI","generateSuggestions","type","context"],"sources":["/Users/harry/Dropbox/Tool_Development/Auto_Creation_Report/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// APIクライアントのインスタンス\nexport const api = axios.create({\n  baseURL: 'http://localhost:8765/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// リクエストインターセプター（認証トークンの追加）\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// レスポンスインターセプター（エラーハンドリング）\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // 認証エラーの場合はログイン画面へ\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API エンドポイント\nexport const authAPI = {\n  login: (email: string, password: string) =>\n    api.post('/auth/login', { email, password }),\n  register: (email: string, password: string, name: string) =>\n    api.post('/auth/register', { email, password, name }),\n  me: () => api.get('/auth/me'),\n};\n\nexport const reportsAPI = {\n  list: (page = 1, limit = 10) =>\n    api.get('/reports/', { params: { page, limit } }),\n  get: (id: number) => api.get(`/reports/${id}`),\n  create: (data: any) => api.post('/reports/', data),\n  update: (id: number, data: any) => api.put(`/reports/${id}`, data),\n  delete: (id: number) => api.delete(`/reports/${id}`),\n  dashboard: () => api.get('/reports/dashboard'),\n};\n\nexport const usersAPI = {\n  me: () => api.get('/users/me'),\n  updateProfile: (data: any) => api.put('/users/me', data),\n};\n\nexport const aiAPI = {\n  generateSuggestions: (type: string, context: any) =>\n    api.post('/ai/generate-suggestions', { type, context }),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}